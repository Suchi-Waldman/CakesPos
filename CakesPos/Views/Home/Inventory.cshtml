@model CakesPos.Data.InventoryByCategoryModel


@section Styles{
    <link href="~/Content/themes/orderStyles.css" rel="stylesheet" />
}


<div class="container" id="inventoryContainer">
    <div>
        <select>
            @foreach (CakesPos.Data.Category c in Model.categories)
            {
                <option class="categoryOpt" value=@c.Id>@c.CategoryName</option>
            }
        </select>
        <h2 id="reqHeader">Showing requests from @ViewBag.minDate.ToShortDateString() - @ViewBag.maxDate.ToShortDateString()</h2>
        <h1 id="minMax"></h1>
        <div id="invInputs">
            <form class="fromToForm" action="/home/Inventory" method="POST">
                <input class="hidden" value=0 name="dayReq" />
                <div class="form-group">
                    <label>
                        From
                        <input type="date" value=@ViewBag.minDate.ToString("yyyy-MM-dd") required class="form-control invDate" id="min" name="min" />
                    </label>
                    <label>
                        To
                        <input type="date" value=@ViewBag.maxDate.ToString("yyyy-MM-dd") required class="form-control invDate" id="max" name="max" />
                    </label>
                    <button id="invRefresh" class="btn btn-default" type="submit"><span class="glyphicon glyphicon-refresh"></span></button>
                </div>
            </form>
            <form class="invForm" action="/home/Inventory" method="POST">
                <input class="hidden" value=@DateTime.Today.Date.AddMonths(-1) name="min" />
                <input class="hidden" value=1 name="dayReq" />
                @if (ViewBag.dayReq == 1)
                {
                    <button class="btn btn-group btn-info" type="submit" name="max" value=@DateTime.Today.Date>Today</button>
                }
                else
                {
                    <button class="btn btn-group btn-default" type="submit" name="max" value=@DateTime.Today.Date>Today</button>
                }
            </form>
            <form class="invForm" action="/home/Inventory" method="POST">
                <input class="hidden" value=@DateTime.Today.Date.AddMonths(-1) name="min" />
                <input class="hidden" value=2 name="dayReq" />
                @if (ViewBag.dayReq == 2)
                {
                    <button class="btn btn-group btn-info" type="submit" name="max" value=@DateTime.Today.Date.AddDays(1)>@DateTime.Today.AddDays(1).DayOfWeek.ToString()</button>
                }
                else
                {
                    <button class="btn btn-group btn-default" type="submit" name="max" value=@DateTime.Today.Date.AddDays(1)>@DateTime.Today.AddDays(1).DayOfWeek.ToString()</button>
                }
            </form>
            <form class="invForm" action="/home/Inventory" method="POST">
                <input class="hidden" value=@DateTime.Today.Date.AddMonths(-1) name="min" />
                <input class="hidden" value=3 name="dayReq" />
                @if (ViewBag.dayReq == 3)
                {
                    <button class="btn btn-group btn-info" type="submit" name="max" value=@DateTime.Today.Date.AddDays(2)>@DateTime.Today.AddDays(2).DayOfWeek.ToString()</button>
                }
                else
                {
                    <button class="btn btn-group btn-default" type="submit" name="max" value=@DateTime.Today.Date.AddDays(2)>@DateTime.Today.AddDays(2).DayOfWeek.ToString()</button>
                }
            </form>
            <form class="invForm" action="/home/Inventory" method="POST">
                <input class="hidden" value=@DateTime.Today.Date.AddMonths(-1) name="min" />
                <input class="hidden" value=4 name="dayReq" />
                @if (ViewBag.dayReq == 4)
                {
                    <button class="btn btn-group btn-info" type="submit" name="max" value=@DateTime.Today.Date.AddDays(3)>@DateTime.Today.AddDays(3).DayOfWeek.ToString()</button>
                }
                else
                {
                    <button class="btn btn-group btn-default" type="submit" name="max" value=@DateTime.Today.Date.AddDays(3)>@DateTime.Today.AddDays(3).DayOfWeek.ToString()</button>
                }
            </form>
            <form class="invForm" action="/home/Inventory" method="POST">
                <input class="hidden" value=@DateTime.Today.Date.AddMonths(-1) name="min" />
                <input class="hidden" value=7 name="dayReq" />
                @if (ViewBag.dayReq == 7)
                {
                    <button class="btn btn-group btn-info" type="submit" name="max" value=@DateTime.Today.Date.AddDays(6)>Next 7 Days</button>
                }
                else
                {
                    <button class="btn btn-group btn-default" type="submit" name="max" value=@DateTime.Today.Date.AddDays(6)>Next 7 Days</button>
                }
            </form>
        </div>
    </div>
    @*@foreach (CakesPos.Data.Category category in Model.categories)
    {*@
        <div class="panel panel-default info-panel">
            <div class="panel-heading">
                @Model.categories.First().CategoryName
            </div>
            <div class="panel-body">
                <table class="table table-condensed table-bordered table-responsive table-hover table-striped" id="inventoryTable">
                    <tr>
                        <th class="thInv" id="invProductCell">Product</th>
                        <th class="thInv">Stock</th>
                        <th class="thInv">
                            Requested
                        </th>
                        <th class="thInv">Total Available</th>
                        <th class="thInv">Action</th>
                    </tr>
                    @*@{var inventory = Model.inventory.Where(i => i.product.CategoryId == category.Id);}*@
                    @foreach (CakesPos.Data.InventoryViewModel i in Model.inventory)
                    {
                        var requested = i.requestedAmount;
                        var total = i.product.InStock - requested;
                        double p = 100 - ((double)i.requestedAmount / (double)i.product.InStock) * (100);
                        //double p = 100 - ((double)i.requestedAmount / (double)i.product) * (100);
                        string per = "";
                        string cls = "";
                        if (p == 0)
                        {
                            per = "style=" + "width:2em";
                        }
                        else
                        {
                            per = "style=" + "width:" + p.ToString() + "%" + ";min-width:2em;";
                        }

                        if (p >= 85)
                        {
                            cls = "progress-bar progress-bar-success progress-bar-striped";
                        }
                        else if (p < 85 && p > 35)
                        {
                            cls = "progress-bar progress-bar-warning progress-bar-striped";
                        }
                        else
                        {
                            cls = "progress-bar progress-bar-danger progress-bar-striped";
                        }

                        <tr>
                            <td>@i.product.ProductName</td>
                            <td class="inStock">@i.product.InStock</td>
                            <td>@i.requestedAmount</td>
                            <td align="center">
                                @if (i.product.InStock - i.requestedAmount < i.product.RestockAmount / 2)
                                {
                                    <div class="badgeDiv" style="font-size: 36px">
                                        <!-- pretend an enclosing class has big font size -->
                                        <span class="label label-danger label-as-badge">@total</span>
                                        @*<h2 style="color:red">Past restock level!</h2>*@
                                    </div>
                                }
                                else if (i.product.InStock - i.requestedAmount < i.product.RestockAmount)
                                {
                                    <div class="badgeDiv" style="font-size: 36px">
                                        <!-- pretend an enclosing class has big font size -->
                                        <span class="label label-warning label-as-badge">@total</span>
                                        @*<h1 style="color:red">Past restock level!</h1>*@
                                    </div>
                                }
                                else
                                {
                                    <div class="badgeDiv" style="font-size: 36px">
                                        <!-- pretend an enclosing class has big font size -->
                                        <span class="label label-success label-as-badge">@total</span>
                                    </div>
                                }
                                @*<div class="progress" style="width:200px;height:35px;">
                                        <div class="@cls" role="progressbar" aria-valuenow="40" aria-valuemin="0" aria-valuemax="100" @per>
                                            <div style="margin-top:10px;">
                                                <span style="color:white;font-size:medium;">@total</span>
                                            </div>
                                            <span class="sr-only">100% Complete (success)</span>
                                        </div>
                                    </div>*@
                            </td>
                            <td align="center">
                                <input type="number" class="invQuantityInput" /> <button class="btn btn-default btn-group add" data-id="@i.product.Id">Add</button>
                                <button class="btn btn-warning productEditBtn" data-id=@i.product.Id>Edit</button>
                                @*<button class="btn btn-warning" id="editProduct" data-id="@i.product.Id">Edit</button>
                                    <button class="btn btn-danger" data-id="@i.product.Id">Discontinue</button>*@
                            </td>
                        </tr>
                    }
                </table>
            </div>
        </div>
    @*}*@
</div>

<div id="editProductModal" class="modal fade" role="dialog">
    <div class="modal-dialog">

        <!-- Modal content-->
        <div class="modal-content">
            <form action="/home/EditProduct" method="POST" id="productForm" enctype="multipart/form-data">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>
                    <h4 class="modal-title">Edit Product</h4>
                </div>
                <div class="modal-body">
                    <div class="well">
                        <h1><span id="productHeader"></span></h1>
                        <div class="form-group">
                            <label>
                                Category
                                <select class="form-control input" name="categoryId" id="categories">
                                </select>
                            </label>
                        </div>
                        <input id="productId" name="productId" style="display:none" />
                        <div class="form-group">
                            <label>Product Name</label>
                            <input type="text" class="form-control" name="productName" id="productName" required placeholder="Product Name">
                        </div>
                        <div class="form-group">
                            <label>Price</label>
                            <input type="number" class="form-control" name="price" id="price" min="0.0" step="0.01" required placeholder="Price">
                        </div>
                        <div class="form-group">
                            <label>Caterer Discount</label>
                            <input type="number" class="form-control" name="catererDiscount" id="catererDiscount" min="0.0" step="0.01" required placeholder="Caterer Discount">
                        </div>
                        <div class="form-group">
                            <label>Restock Amount</label>
                            <input type="number" class="form-control" name="restockAmount" required id="restockAmount" placeholder="Restock Amount">
                        </div>
                        <div class="form-group">
                            <label>Image</label>
                            <div id="imageDiv"></div>
                            <input type="file" name="image" id="image" class="form-control">
                        </div>
                        <div class="form-group">
                            <label>Sorting Index</label>
                            <input type="number" class="form-control" name="sortIndex" required id="sortIndex" placeholder="Sorting Index">
                        </div>
                        <div class="form-group">
                            <label>Discontinued</label>
                            <input name="discontinued" id="discontinued" value="true" type="checkbox">
                            <input name="discontinued" id="discontinued" hidden value="false" type="checkbox">
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    @*<button class="btn btn-primary" id="customProductSubmit">Submit</button>*@
                    <button type="submit" id="submitProdChanges" class="btn btn-primary">Submit Changes</button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                </div>
            </form>
        </div>
    </div>
</div>


